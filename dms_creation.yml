
AWSTemplateFormatVersion: 2010-09-09
Description:  Oracle to Aurora Postgres Migration DMS Setup

Parameters:

  pVPCStack:
    Description: 'Provide name of VPC cloudformation stack'
    Type: String
    MinLength: '1'
    MaxLength: '128'
    AllowedPattern: '^[a-zA-Z]+[0-9a-zA-Z\-]*$'
    
  pEC2KeyPair:
    Description: >-
      Enter a Public/private key pair. If you do not have one in this AWS Region,
      create it before continuing
    Type: 'AWS::EC2::KeyPair::KeyName'
    AllowedPattern: '^[a-zA-Z]+[0-9a-zA-Z\-]*$'

  pBastianAmiId:
    Description: AMI used to create bastian Server
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
    AllowedPattern: '^[0-9a-zA-Z\-\/_]*$'

  pBastianInstanceType:
    AllowedValues:
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
    Default: m5.large
    Description: EC2 instance type for Bastian Server
    Type: String

  pAuroraDBName:
    Description: Aurora Postgres Database Name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: "^[a-zA-Z]+[0-9a-zA-Z_]*$" 
    ConstraintDescription: Must start with a letter. Only numbers, letters, and _ accepted. max length 64 characters 

  pAuroraDBPort:
    Description: TCP/IP Port for the Aurora Postgres Instance
    Type: Number
    Default: 5432
    ConstraintDescription: 'Must be in the range [1115-65535]'
    MinValue: 1115
    MaxValue: 65535
    
  pAuroraDBAdminUser:
    Description: Aurora Postgres Database master username
    Type: String
    Default: migrator
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: "^[a-zA-Z]+[0-9a-zA-Z_]*$"
    ConstraintDescription: Must start with a letter. Only numbers, letters, and _ accepted. max length 16 characters
     
  pAuroraDBEngineVersion:
    Description: Select Aurora Postgres Database Engine Version
    Type: String
    Default: 12.4
    AllowedValues:
    - 10.11
    - 10.12
    - 10.13
    - 10.14
    - 11.6
    - 11.7
    - 11.8
    - 11.9
    - 12.4
     
  pAuroraDBInstanceClass:
    Description: Aurora Postgres Database Instance Class
    Type: String
    Default: db.r5.2xlarge
    AllowedValues:
    - db.r5.large
    - db.r5.xlarge
    - db.r5.2xlarge
    - db.r5.4xlarge
    - db.r5.8xlarge
    - db.r5.12xlarge
    - db.r5.16xlarge
    - db.r5.24xlarge
    
  pAuroraDBBackupRetention:
    Description: Backup Retention for Aurora Postgres Database
    Type: Number
    Default: 1
    ConstraintDescription: 'Must be in the range [1-35]'
    MinValue: 1
    MaxValue: 35

  pOracleDBName:
    Description: SID/Service Name of Oracle Database
    Type: String
    Default: oradev
    AllowedPattern: '^[a-zA-Z]+[0-9a-zA-Z]*$'

  pOracleDBUsername:
    AllowedPattern: '[a-zA-Z0-9][a-zA-Z0-9_]*'
    Type: String
    Default: dmsmgr
    Description: Oracle User name that will be used by DMS Replication.
    MaxLength: '25'
    MinLength: '5'
    AllowedPattern: '^[a-zA-Z]+[0-9a-zA-Z_]*$'

  pOracleDBPassword:
    Description: Oracle password of the Oracle User that will be used by DMS Replication
    Type: String
    MaxLength: '32'
    MinLength: '8'
    NoEcho: 'true'
  
  pOracleDBHostIP:
    Description: IP Address for Oracle Database Server
    Type: String
    Default: 127.0.0.1
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}'

  pOracleDBPort:
    Description: TCP/IP Port for the Oracle Database
    Type: Number
    Default: 1521
    ConstraintDescription: 'Must be in the range [1115-65535]'
    MinValue: 1115
    MaxValue: 65535

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC Stack & EC2 Key Pair
        Parameters:
          - pVPCStack
          - pEC2KeyPair
      - Label:
          default: Bastian Server Configuration
        Parameters:
          - pBastianAmiId
          - pBastianInstanceType
      - Label:
          default: Aurora Postgres Configuration
        Parameters:
          - pAuroraDBName
          - pAuroraDBPort
          - pAuroraDBAdminUser
          - pAuroraDBEngineVersion
          - pAuroraDBInstanceClass
          - pAuroraDBBackupRetention
      - Label:
          default: Oracle Database Configuration
        Parameters:
          - pOracleDBName
          - pOracleDBUsername
          - pOracleDBPassword
          - pOracleDBHostIP
          - pOracleDBPort

    ParameterLabels: 
      pVPCStack: 
        default: "Enter the VPC CloudFormation Stack Name"
      pEC2KeyPair:
        default: "Enter the EC2 Key Pair. If you do not have one in this AWS Region, create it before continuing"
      pBastianAmiId:
        default: "Enter AMI ID for Bastian Server"
      pBastianInstanceType:
        default: "Enter EC2 instance type for Bastian Server"
      pAuroraDBName: 
        default: "Enter Aurora Postgres Database Name"
      pAuroraDBPort:
        default: "Enter TCP/IP Port for the Aurora Postgres Instance"
      pAuroraDBAdminUser:
        default: "Enter Aurora Postgres Database master username"
      pAuroraDBEngineVersion:
        default: "Enter Aurora Postgres Database Engine Version"
      pAuroraDBInstanceClass:
        default: "Enter Aurora Postgres Database Instance Class"
      pAuroraDBBackupRetention:
        default: "Enter Backup Retention for Aurora Postgres Database"
      pOracleDBName: 
        default: "Enter SID/Service Name of Oracle Database"
      pOracleDBUsername:
        default: "Enter Oracle User name that will be used by DMS Replication"
      pOracleDBPassword:
        default: "Enter Oracle password of the Oracle User that will be used by DMS Replication"
      pOracleDBHostIP:
        default: "Enter IP Address for Oracle Database Server"
      pOracleDBPort:
        default: "Enter TCP/IP Port for the Oracle Database"

Mappings: 
  mDBFamily: 
    "10.11":
      "family": aurora-postgresql10"
    "10.12":
      "family": "aurora-postgresql10"
    "10.13":
      "family": "aurora-postgresql10"
    "10.14":
      "family": "aurora-postgresql10"
    "11.4":
      "family": "aurora-postgresql11"
    "11.6":
      "family": "aurora-postgresql11"
    "11.7":
      "family": "aurora-postgresql11"
    "11.8":
      "family": "aurora-postgresql11"
    "11.9":
      "family": "aurora-postgresql11"
    "12.4":
      "family": "aurora-postgresql12"

Resources:
  rBastianServer:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref pBastianInstanceType
      ImageId: !Ref pBastianAmiId
      KeyName: !Ref pEC2KeyPair
      SubnetId: !ImportValue 
        'Fn::Sub': ${pVPCStack}-PubbastianSub
      SecurityGroupIds: 
      - !ImportValue 
        'Fn::Sub': ${pVPCStack}-BastianSecurityGroup
      BlockDeviceMappings: 
      - DeviceName: /dev/xvda
        Ebs: 
          VolumeType: gp2
          DeleteOnTermination: true
          VolumeSize: 20
          Encrypted: true
      - DeviceName: /dev/sdm
        Ebs: 
          VolumeType: gp2
          DeleteOnTermination: true
          VolumeSize: 20
          Encrypted: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-BastianServer

  rBfileIconsS3:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketEncryption: 
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-BfileIcons Bucket

  rEC2PrivsRole:
    Type: AWS::IAM::Role
    DependsOn: 
    - rBfileIconsS3
    - rAuroraPostgresSecret
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: !Sub "AppEC2Privs-${AWS::StackName}"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - s3:PutObject
              - s3:GetObjectAcl
              - s3:GetObject
              - s3:ListBucket
              - s3:DeleteObject
              Resource: 
              - !Sub arn:aws:s3:::${rBfileIconsS3}
              - !Sub arn:aws:s3:::${rBfileIconsS3}/*
            - Effect: Allow
              Action:
              - s3:ListAllMyBuckets
              Resource: '*'
            - Effect: Allow
              Action:
              - secretsmanager:GetSecretValue
              Resource: !Ref rAuroraPostgresSecret
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-EC2 Privs IAM Role

  rEC2PrivsRoleInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref rEC2PrivsRole

  rAuroraPostgresSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: 'This is the secret for Aurora instance'
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${pAuroraDBAdminUser}"}'
        GenerateStringKey: 'password'
        PasswordLength: 16
        ExcludeCharacters: '"@/\:,{}'
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Aurora Postgres Secret

  rMonitoringIAMRole: 
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "monitoring.rds.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-RDS Monitoring Role

  rDBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: !Sub "Aurora PG Cluster Parameter Group for  Database - ${pAuroraDBName}"
      Family: !FindInMap [mDBFamily, !Ref pAuroraDBEngineVersion, "family"]
      Parameters:
        rds.force_ssl: 1
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Aurora Cluster Parameter Group

  rDBParamGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: !Sub "Aurora PG Database Instance Parameter Group for Database - ${pAuroraDBName}"
      Family: !FindInMap [mDBFamily, !Ref pAuroraDBEngineVersion, "family"]
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Aurora DB Parameter Group

  rAuroraPGCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Properties:
      Engine: aurora-postgresql
      EngineVersion: !Ref pAuroraDBEngineVersion
      DatabaseName: !Ref pAuroraDBName
      DBClusterIdentifier: !Sub ${AWS::StackName}-AuroraPGCluster
      Port: !Ref pAuroraDBPort
      MasterUsername: !Sub '{{resolve:secretsmanager:${rAuroraPostgresSecret}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${rAuroraPostgresSecret}:SecretString:password}}' 
      DBSubnetGroupName: !ImportValue 
        'Fn::Sub': ${pVPCStack}-DBSubGroup
      VpcSecurityGroupIds: 
      - !ImportValue 
        'Fn::Sub': ${pVPCStack}-DBSecurityGroup
      BackupRetentionPeriod: !Ref pAuroraDBBackupRetention
      DBClusterParameterGroupName: !Ref rDBClusterParameterGroup
      StorageEncrypted:  true
      EnableIAMDatabaseAuthentication: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Aurora PG Cluster

  rAuroraPGInstance1:
    Type: AWS::RDS::DBInstance
    Properties:
      CopyTagsToSnapshot: true  
      DBInstanceClass:
        Ref: pAuroraDBInstanceClass
      DBClusterIdentifier: !Ref rAuroraPGCluster  
      DBInstanceIdentifier: !Sub ${AWS::StackName}-AuroraPGInstance1
      Engine: aurora-postgresql
      EngineVersion: !Ref pAuroraDBEngineVersion
      DBParameterGroupName:
        Ref: rDBParamGroup
      MonitoringInterval: 1
      MonitoringRoleArn: !GetAtt rMonitoringIAMRole.Arn
      AutoMinorVersionUpgrade: 'false'
      DBSubnetGroupName: !ImportValue 
        'Fn::Sub': ${pVPCStack}-DBSubGroup
      PubliclyAccessible: false
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: 7
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Aurora PG Instance

  rAuroraPGInstance2:
    Type: AWS::RDS::DBInstance
    DependsOn: 
      - rAuroraPGInstance1
    Properties:
      CopyTagsToSnapshot: true  
      DBInstanceClass:
        Ref: pAuroraDBInstanceClass
      DBClusterIdentifier: !Ref rAuroraPGCluster
      DBInstanceIdentifier: !Sub ${AWS::StackName}-AuroraPGInstance2
      Engine: aurora-postgresql
      EngineVersion: !Ref pAuroraDBEngineVersion
      DBParameterGroupName:
        Ref: rDBParamGroup
      MonitoringInterval: 1
      MonitoringRoleArn: !GetAtt rMonitoringIAMRole.Arn
      AutoMinorVersionUpgrade: 'false'
      DBSubnetGroupName: !ImportValue 
        'Fn::Sub': ${pVPCStack}-DBSubGroup
      PubliclyAccessible: false
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: 7
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Aurora PG Instance

  rAuroraPostgresSecretAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    DependsOn: 
      - rAuroraPGCluster
    Properties:
      SecretId: !Ref rAuroraPostgresSecret
      TargetId: !Ref rAuroraPGCluster
      TargetType: AWS::RDS::DBCluster

  rOracleDBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub 'OnPrem/${AWS::StackName}/${pOracleDBName}-${pOracleDBUsername}'
      Description: Oracle Database Username that is used for DMS Replication
      SecretString: !Sub '{ "username" : "${pOracleDBUsername}", "password" : "${pOracleDBPassword}" }'
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Oracle Database Secret
      
  rDmsSubnetGroup:
    Type: AWS::DMS::ReplicationSubnetGroup
    Properties:
      ReplicationSubnetGroupDescription: "Subnet group for DMS Replication Instances"
      SubnetIds:
        - !ImportValue 
          'Fn::Sub': ${pVPCStack}-PrivDBSub1
        - !ImportValue 
          'Fn::Sub': ${pVPCStack}-PrivDBSub2
      Tags:
        - Key: Name
          Value: !Sub ${pVPCStack} DMS Subnet Group

  rReplicationInstance: 
    Type: AWS::DMS::ReplicationInstance
    Properties:
      ReplicationInstanceIdentifier: !Sub ${AWS::StackName}-dmsrepcatinstance
      ReplicationInstanceClass: dms.r5.2xlarge
      AllocatedStorage: 100
      PubliclyAccessible: false
      MultiAZ: true
      ReplicationSubnetGroupIdentifier: !Ref rDmsSubnetGroup
      VpcSecurityGroupIds: 
        - !ImportValue 
          'Fn::Sub': ${pVPCStack}-DBSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-DMS Replication Instance

Outputs:
  oBastianServer:
    Description: Bastian Server
    Value: !Ref rBastianServer
    Export:
      Name: !Sub "${AWS::StackName}-BastianServer"

  oBfileIconsS3:
    Description: Bucket to store Bfile Icons
    Value: !Ref rBfileIconsS3
    Export:
      Name: !Sub "${AWS::StackName}-BfileIconsS3"

  oEC2PrivsRole:
    Description: IAM Role with permissions required by Bastian Server
    Value: !Ref rEC2PrivsRole
    Export:
      Name: !Sub "${AWS::StackName}-EC2PrivsRole"

  oAuroraPostgresSecret:
    Description: Secrets for Aurora Postgres Instance
    Value: !Ref rAuroraPostgresSecret
    Export:
      Name: !Sub "${AWS::StackName}-AuroraPostgresSecret"

  oOracleDBSecret:
    Description: Secrets for Oracle Database
    Value: !Ref rOracleDBSecret
    Export:
      Name: !Sub "${AWS::StackName}-OracleDBSecret"

  oAuroraPGCluster:
    Description: Aurora Postgres Cluster
    Value: !Ref rAuroraPGCluster
    Export:
      Name: !Sub "${AWS::StackName}-AuroraPGCluster"

  oAuroraPGInstance1:
    Description: Aurora Postgres Instance1
    Value: !Ref rAuroraPGInstance1
    Export:
      Name: !Sub "${AWS::StackName}-AuroraPGInstance1"

  oAuroraPGInstance2:
    Description: Aurora Postgres Instance2
    Value: !Ref rAuroraPGInstance2
    Export:
      Name: !Sub "${AWS::StackName}-AuroraPGInstance2"

  oDmsSubnetGroup:
    Description: DMS Replication Instance Subnet Group
    Value: !Ref rDmsSubnetGroup
    Export:
      Name: !Sub "${AWS::StackName}-DMSSubnetGroup"

  oReplicationInstance:
    Description: DMS Replication Instance
    Value: !Ref rReplicationInstance
    Export:
      Name: !Sub "${AWS::StackName}-ReplicationInstance"
